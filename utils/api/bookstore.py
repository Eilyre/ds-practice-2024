# generated by datamodel-codegen:
#   filename:  bookstore.yaml
#   timestamp: 2024-02-27T19:18:40+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class User(BaseModel):
    name: Optional[str] = None
    contact: Optional[str] = None


class CreditCard(BaseModel):
    number: Optional[str] = None
    expirationDate: Optional[str] = None
    cvv: Optional[str] = None


class Item(BaseModel):
    name: Optional[str] = None
    quantity: Optional[int] = None


class BillingAddress(BaseModel):
    street: Optional[str] = None
    city: Optional[str] = None
    state: Optional[str] = None
    zip: Optional[str] = None
    country: Optional[str] = None


class Device(BaseModel):
    type: Optional[str] = None
    model: Optional[str] = None
    os: Optional[str] = None


class Browser(BaseModel):
    name: Optional[str] = None
    version: Optional[str] = None


class CheckoutRequest(BaseModel):
    user: Optional[User] = None
    creditCard: Optional[CreditCard] = None
    userComment: Optional[str] = None
    items: Optional[List[Item]] = None
    discountCode: Optional[str] = None
    shippingMethod: Optional[str] = None
    giftMessage: Optional[str] = None
    billingAddress: Optional[BillingAddress] = None
    giftWrapping: Optional[bool] = None
    termsAndConditionsAccepted: Optional[bool] = None
    notificationPreferences: Optional[List[str]] = None
    device: Optional[Device] = None
    browser: Optional[Browser] = None
    appVersion: Optional[str] = None
    screenResolution: Optional[str] = None
    referrer: Optional[str] = None
    deviceLanguage: Optional[str] = None


class SuggestedBook(BaseModel):
    bookId: Optional[str] = None
    title: Optional[str] = None
    author: Optional[str] = None


class OrderStatusResponse(BaseModel):
    orderId: Optional[str] = None
    status: Optional[str] = Field(
        None,
        description='Order status: "Order Approved" or "Order Rejected". If rejected, suggestedBooks is empty.',
    )
    suggestedBooks: Optional[List[SuggestedBook]] = None


class Error(BaseModel):
    code: Optional[str] = None
    message: Optional[str] = None


class ErrorResponse(BaseModel):
    error: Optional[Error] = None
